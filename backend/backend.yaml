- name: Backend setup
  hosts: backend
  become: yes
  tasks:
    - name: Disable and enable NodeJS 20
      ansible.builtin.shell: |
        dnf module disable nodejs -y
        dnf module enable nodejs:20 -y
        dnf install nodejs -y
      

    - name: Add application user
      ansible.builtin.user:
        name: expense
        state: present

    - name: Ensure /app directory exists
      ansible.builtin.file:
        path: /app
        state: directory
        

    - name: Download backend application zip
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Extract backend archive
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
        

    - name: Install application dependencies using npm
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: Copy backend service configuration
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start and enable backend service
      ansible.builtin.systemd:
        name: backend
        state: started
        enabled: yes

    - name: Install MySQL client
      ansible.builtin.package:
        name: mysql
        state: present

    - name: Load database schema
      ansible.builtin.command:
        cmd: mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql


    - name: Restart backend service
      ansible.builtin.systemd:
        name: backend
        state: restarted
